#!/usr/bin/env bash
set -euo pipefail

export SHELL="$(command -v bash)"
dfzf-kill-bro >/dev/null
windows_prompt_pattern="^[>$%] "
[ -f "$HOME/.config/dfzf/dfzf.conf" ] && source "$HOME/.config/dfzf/dfzf.conf"
export FZF_DEFAULT_OPTS="--ansi --no-sort --exact --cycle --color=gutter:-1 --header= --info=inline-right --margin=1,2"

if command -v fd >/dev/null; then
	findcommand="fd"
elif command -v fdfind >/dev/null; then
	findcommand="fdfind"
else
	echo "Neither fd nor fdfind found. Please install one of them."
	exit 1
fi
kitty_sock=$($findcommand '^kitty-\d+$' /tmp --max-depth 1 | head -n1)

dfzf_map=$(dfzf-exec -t get_tree --raw | jq -rc '
  .. | objects | select(.name != null)
  | {title: (.name | gsub(" "; ".")), id}
')


findcommand=$(command -v fd || command -v fdfind) || {
	echo "Neither fd nor fdfind found"
	exit 1
}
kitty_sock=$($findcommand '^kitty-\d+$' /tmp --max-depth 1 | head -n1)
PREVIEW="
id=\$(echo {} | sed -Ez 's/.*#([0-9]+).*/\1/')
kitty_title=\$(dfzf-exec -t get_tree --raw | jq -r --arg id "\$id" '.. | objects | select(.id == (\$id | tonumber)) | .name' | sed 's/ /./g')
prompt_content=\$(kitten @ get-text --to unix:$kitty_sock --match \"title:^\$kitty_title$\" --extent all  2>/dev/null | rg -U '$windows_prompt_pattern(.+)' -o --replace '$> \$1'|tail -n 100)
if [[ -n \"\$prompt_content\" ]]; then
  printf '%s\n' \"\$prompt_content\" 
else
  (kitten @ get-text --to unix:$kitty_sock --match \"title:^\$kitty_title$\" --extent screen  2>/dev/null || (echo {} |fold -s -w 90))|rg -v '^\\~\\s*$|^\\s+$'
fi
"

result=$(
	kitty @ ls --to "unix:$kitty_sock" | jq -r '.[].tabs[].windows[].title | gsub(" "; ".")' |
		xargs -P"$(
			cpus=$(nproc 2>/dev/null || sysctl -n hw.ncpu)
			if [ "$cpus" -gt 6 ]; then echo 8; else echo "$cpus"; fi
		)" -I{} bash -c '
  title="$1"
  dfzf_map_json="$2"
  sock="$3"
  id=$(echo "$dfzf_map_json" | jq -r --arg t "$title" "select(.title == \$t) | .id")
  if [ -n "$id" ]; then
    text=$(kitten @ get-text --to "unix:$sock" --match "title:^$title" --extent all | tac | nl | rg -v "^\s+$|^\s+[0-9]+\s*~\s*$" | sed "s/^[ \t]*//;s/[ \t]*$//;s/$/ #${id}/")
    colors=(31 32 33 34 35 36)
    sum=0
    for ((i=0; i<${#id}; i++)); do
      sum=$((sum + $(printf "%d" "''${id:i:1}")))
    done
    color=${colors[$((sum % ${#colors[@]}))]}
    echo -e "\033[${color}m${text}\033[0m"
  fi
' _ "{}" "$dfzf_map" "$kitty_sock" |
		fzf --prompt "Scrollbacks: " \
			--no-unicode \
			--preview="$PREVIEW" \
			--preview-window="up,follow"
)

con_id=$(echo "$result" | sed -Ez 's/.*#([0-9]+).*/\1/')
scroll_line=$(echo "$result" | sed -Ez 's/^([0-9]+).*/\1/')
# arbitrary increase scroll by 2 to make the bottom terimal match the selected row
scroll_line=$((scroll_line - 2))
dfzf-exec -q "[con_id=$con_id]" focus
title=$(dfzf-exec -t get_tree --raw | jq -r --arg id "$con_id" ' .. | objects | select(.id == ($id | tonumber)) | .name  | gsub(" "; ".")')
kitty @ scroll-window --to "unix:$kitty_sock" --match "title:^$title$" "${scroll_line}l-"
